{
  "title": "Introduction to Hs",
  "day": "19",
  "month": "10",
  "year": "2020",
  "desc": "First class in Functional Programming. We played with interpreter and implemented/talked about different function implementations to get a feel for Haskell.",
  "category": "Class",
  "language": "Haskell",
  "showLine": "30",
  "io": false,
  "input": "",
  "output": "",
  "code": [
    "f1 x = not x",
    "",
    "f2 :: (t, t, t) -> [t]",
    "",
    "f2 (a, b, c) = [a, b, c]",
    "",
    "f3 :: [[t]] -> [t]",
    "",
    "f4 (a, b) n = (take n (repeat a), take n (repeat b))",
    "",
    "f5 a - 60 `div` a",
    "",
    "f6 a b = (a, b)",
    "",
    "f7 a bb = a == b",
    "",
    "f8 :: Integral t => [t] -> Bool",
    "f8 (x : xs) = x `mod` 3 == 0 && f8 xs",
    "f8 [] = True",
    "",
    "f9 :: Eq t => [t] -> Bool",
    "f9 x = reverse x == x",
    "",
    "f10 a b c = a + b + c",
    "",
    "quad x = 4 * x",
    "",
    "poly x = x * x + 3 * x - 1",
    "",
    "absolute x = if x < 0 then -x else x",
    "",
    "sumlist (x : xs) = x + sumlist xs",
    "sumlist [] = 0",
    "",
    "sumnums a b = sumlist[a .. b]",
    "",
    "factorial n = product [1 .. n]",
    "",
    "modulo a b = a - (a `div` b) * b",
    "",
    "logicnot x = not x",
    "",
    "main = do print (a `div` b)",
    "       where a = 22 :: Int",
    "             b = 5 :: Int"
  ]
}